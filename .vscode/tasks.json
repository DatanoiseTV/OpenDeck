{
    "version": "2.0.0",
    "tasks": [
        {
            "label": "[FW/BTLDR] Build",
            "command": "cd ./src && compiledb -d . make TARGET=${input:target} LANG=C DEBUG=${input:debug}",
            "type": "shell",
            "problemMatcher": [
                "$gcc"
            ],
            "group": {
                "kind": "build",
                "isDefault": true
            }
        },
        {
            "label": "[FW/STM32FDiscovery/Debug] Build",
            "command": "cd ./src && compiledb -d . make TARGET=discovery LANG=C DEBUG=1 TYPE=app",
            "type": "shell",
            "problemMatcher": [
                "$gcc"
            ],
            "group": {
                "kind": "build",
                "isDefault": true
            }
        },
        {
            "label": "[BTLDR/STM32FDiscovery/Debug] Build",
            "command": "cd ./src && compiledb -d . make TARGET=discovery LANG=C DEBUG=1 TYPE=boot",
            "type": "shell",
            "problemMatcher": [
                "$gcc"
            ],
            "group": {
                "kind": "build",
                "isDefault": true
            }
        },
        {
            "label": "[FW/Cardamom/Debug] Build",
            "command": "cd ./src && compiledb -d . make TARGET=cardamom LANG=C DEBUG=1 TYPE=app",
            "type": "shell",
            "problemMatcher": [
                "$gcc"
            ],
            "group": {
                "kind": "build",
                "isDefault": true
            }
        },
        {
            "label": "[BTLDR/Cardamom/Debug] Build",
            "command": "cd ./src && compiledb -d . make TARGET=cardamom LANG=C DEBUG=1 TYPE=boot",
            "type": "shell",
            "problemMatcher": [
                "$gcc"
            ],
            "group": {
                "kind": "build",
                "isDefault": true
            }
        },
        {
            "label": "[FW/DubFocus/Debug] Build",
            "command": "cd ./src && compiledb -d . make TARGET=dubfocus LANG=C DEBUG=1 TYPE=app",
            "type": "shell",
            "problemMatcher": [
                "$gcc"
            ],
            "group": {
                "kind": "build",
                "isDefault": true
            }
        },
        {
            "label": "[BTLDR/DubFocus/Debug] Build",
            "command": "cd ./src && compiledb -d . make TARGET=dubfocus LANG=C DEBUG=1 TYPE=boot",
            "type": "shell",
            "problemMatcher": [
                "$gcc"
            ],
            "group": {
                "kind": "build",
                "isDefault": true
            }
        },
        {
            "label": "[BTLDR/OpenDeck2/Debug] Build",
            "command": "cd ./src && compiledb -d . make TARGET=opendeck2 LANG=C DEBUG=1 TYPE=boot",
            "type": "shell",
            "problemMatcher": [
                "$gcc"
            ],
            "group": {
                "kind": "build",
                "isDefault": true
            }
        },
        {
            "label": "[FW/OpenDeck2/Debug] Build",
            "command": "cd ./src && compiledb -d . make TARGET=opendeck2 LANG=C DEBUG=1 TYPE=app",
            "type": "shell",
            "problemMatcher": [
                "$gcc"
            ],
            "group": {
                "kind": "build",
                "isDefault": true
            }
        },
        {
            "label": "[FW/Rooibos/Debug] Build",
            "command": "cd ./src && compiledb -d . make TARGET=rooibos LANG=C DEBUG=1 TYPE=app",
            "type": "shell",
            "problemMatcher": [
                "$gcc"
            ],
            "group": {
                "kind": "build",
                "isDefault": true
            }
        },
        {
            "label": "[FW/Bergamot/Debug] Build",
            "command": "cd ./src && compiledb -d . make TARGET=bergamot LANG=C DEBUG=1 TYPE=app",
            "type": "shell",
            "problemMatcher": [
                "$gcc"
            ],
            "group": {
                "kind": "build",
                "isDefault": true
            }
        },
        {
            "label": "[FW/BlackPill401/Debug] Build",
            "command": "cd ./src && compiledb -d . make TARGET=blackpill401 LANG=C DEBUG=1 TYPE=app",
            "type": "shell",
            "problemMatcher": [
                "$gcc"
            ],
            "group": {
                "kind": "build",
                "isDefault": true
            }
        },
        {
            "label": "[CDC/Discovery/Debug] Build",
            "command": "cd ./src && compiledb -d . make TARGET=discovery LANG=C DEBUG=1 TYPE=cdc",
            "type": "shell",
            "problemMatcher": [
                "$gcc"
            ],
            "group": {
                "kind": "build",
                "isDefault": true
            }
        },
        {
            "label": "[FW/BTLDR] Clean",
            "command": "cd ./src && make clean",
            "type": "shell",
            "problemMatcher": []
        },
        {
            "label": "[Tests] Build",
            "command": "cd ./tests && make pre-build TARGET=${input:target} && make TARGET=${input:target} TESTS=${input:test} && cp $(../scripts/test_dir_get.sh ${input:target} ${input:test})/${input:test}.out build/test.out",
            "type": "shell",
            "problemMatcher": [
                "$gcc"
            ]
        },
        {
            "label": "[Tests] Clean",
            "command": "cd ./tests && make clean",
            "type": "shell",
            "problemMatcher": []
        },
        {
            "label": "[Tests] Run compiled",
            "command": "cd ./tests && make exec",
            "type": "shell",
            "problemMatcher": []
        },
        {
            "label": "[VSCode] Update intellisense",
            "command": "./scripts/vscode_intellisense.sh ${input:target}",
            "type": "shell",
            "problemMatcher": []
        },
        {
            "label": "[Flashgen] Build",
            "command": "cd ./src && make pre-build TARGET=${input:target} && make TARGET=${input:target} TYPE=flashgen DEBUG=1 binary && cp ./build/${input:target}/debug/flashgen/${input:target}.elf ./build/flashgen.elf",
            "type": "shell",
            "problemMatcher": [
                "$gcc"
            ]
        }
    ],
    "inputs": [
        {
            "id": "target",
            "type": "pickString",
            "default": "discovery",
            "description": "Select target for which to build:",
            "options": [
                "bergamot",
                "blackpill401ce",
                "blackpill401cc",
                "blackpill411",
                "cardamom",
                "discovery",
                "dubfocus12",
                "dubfocus16c",
                "dubfocus16",
                "hugo_cc24",
                "mega16u2",
                "mega2560_muxsh2",
                "mega2560",
                "opendeck2",
                "rooibos",
                "teensy2pp",
                "opendeck_mini",
                "ws_core407i",
            ]
        },
        {
            "id": "test",
            "type": "pickString",
            "default": "database",
            "description": "Select test to build:",
            "options": [
                "buttons",
                "database",
                "encoders",
                "usb_over_serial",
                "potentiometer",
                "ringbuffer",
                "system",
                "leds",
                "hw",
                "bootloader"
            ]
        },
        {
            "id": "debug",
            "type": "pickString",
            "default": "database",
            "description": "Build debug version? (0/no, 1/yes)",
            "options": [
                "0",
                "1"
            ]
        }
    ]
}