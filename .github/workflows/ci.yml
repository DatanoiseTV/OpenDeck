name: CI

on: [push]

jobs:
  build_and_test_ubuntu:
    name: Build/Test [Ubuntu]
    runs-on: ubuntu-20.04
    container:
      image: paradajz168/opendeck-dev:latest
      options: --user root
    steps:
      - name: Pull the repository and submodules
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          submodules: recursive
      - name: Build targets
        run: |
          export MAKEFLAGS=-j$(nproc)
          git fetch --tags
          cd src/
          ../scripts/build_targets.sh
      - name: Test targets
        run: |
          export MAKEFLAGS=-j$(nproc)
          cd tests/
          ../scripts/build_targets.sh
          make exec
  hw-tests:
    name: Run tests on physical boards
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          submodules: recursive
      - name: Run tests on hardware
        run: |
          git reset --hard
          git clean -dxf
          git fetch --tags
          cd tests
          ../scripts/build_targets.sh --hw
          make exec HW_TESTING=1
  format:
    name: Code formatting
    runs-on: ubuntu-20.04
    container:
      image: paradajz168/opendeck-dev:latest
      options: --user root
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          submodules: recursive
      - name: Source formatting
        run: |
          cd src
          make format CF_FAIL_ON_DIFF=1
      - name: Test formatting
        run: |
          cd tests
          make format CF_FAIL_ON_DIFF=1
  lint:
    name: Code linting
    runs-on: ubuntu-20.04
    container:
      image: paradajz168/opendeck-dev:latest
      options: --user root
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          submodules: recursive
      - name: Source lint
        run: |
          cd src
          ../scripts/lint.sh